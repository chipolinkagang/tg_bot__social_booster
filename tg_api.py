import asyncio
import logging

from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.dispatcher import Dispatcher
import math

import like_api
import view_api
from aiogram.types.message import ContentType
from aiogram.utils.markdown import text, bold, italic, code, pre
from aiogram.types import ParseMode, InputMediaPhoto, InputMediaVideo, ChatActions

import db_funcs
from aiopg.sa import create_engine

import markups as nav

bot = Bot(token='5489920134:AAGkMf2P9b22kpAGkRWLV6QAd6b6jyIN85k')
dp = Dispatcher(bot)


@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    uid = message.from_user.id  # –∑–∞–ø–∏—Å–∞–ª id
    uname = message.from_user.full_name  # –∏–º—è
    person = {"name": uname, "tg_id": str(uid)}
    async with create_engine(user='postgres',
                             database='lab1',
                             host='127.0.0.1',
                             password='123456') as engine:
        if not await db_funcs.reg_check(engine, person["tg_id"]):
            await db_funcs.registration(engine, person)
            await message.reply("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞!", reply_markup=nav.mainMenu)
        else:
            await message.reply("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –º–µ–Ω—é", reply_markup=nav.mainMenu)


class Task_now:
    task_id = 0  # 1 - –ª–∞–π–∫–∏, 2 - –ø—Ä–æ—Å–º–æ—Ç—Ä—ã

    def choose_task(self, _task: int):
        self.task_id = _task

    def check_task(self):
        return self.task_id


task = Task_now()


@dp.message_handler()
async def echo_message(msg: types.Message):
    async with create_engine(user='postgres',
                             database='lab1',
                             host='127.0.0.1',
                             password='123456') as engine:
        if msg.text == "‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            task.choose_task(0)
            await bot.send_message(msg.from_user.id, "–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=nav.mainMenu)

        # for main menu:
        elif msg.text == "üÜï –ó–ê–ö–ê–ó":
            task.choose_task(0)
            await bot.send_message(msg.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è.", reply_markup=nav.orderMenu)
        elif msg.text == "‚ÑπÔ∏è –ü—Ä–æ—Ñ–∏–ª—å":
            task.choose_task(0)
            uid = str(msg.from_user.id)
            balance = await db_funcs.get_balance(engine, str(msg.from_user.id))
            ans = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\nTelegram id: " + uid + "\n–ë–∞–ª–∞–Ω—Å: " + str(
                balance) + "\n–ù–∞ —Å—á–µ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–∏—Å–∞—Ç—å: @chipolinka_gang"
            await bot.send_message(msg.from_user.id, ans)
        elif msg.text == "#Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
            uid = str(msg.from_user.id)
            get_like = await db_funcs.get_report(engine, uid, 1)
            get_view = await db_funcs.get_report(engine, uid, 2)
            task.choose_task(0)
            await bot.send_message(msg.from_user.id,
                                   "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n–õ–∞–π–∫–∏:\n–ó–∞–∫–∞–∑–æ–≤: " + str(get_like['res_orders']) + " —à—Ç—É–∫\n–í—Å–µ–≥–æ: " +
                                   str(get_like['res_sum']) + " –ª–∞–π–∫–æ–≤\n\n–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:\n–ó–∞–∫–∞–∑–æ–≤: " + str(
                                       get_view['res_orders']) + " —à—Ç—É–∫\n–í—Å–µ–≥–æ: " +
                                   str(get_view['res_sum']) + " –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤")
        # for order menu:
        elif msg.text == "üîù –õ–∞–π–∫–∏":
            task.choose_task(1)
            await bot.send_message(msg.from_user.id,
                                   "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n–¶–µ–Ω–∞ 60 —Ä—É–±–ª–µ–π –∑–∞ 1000 –ª–∞–π–∫–æ–≤\n–ü—Ä–∏–º–µ—Ä:\nhttps://vk.com/wall-22822305_1307837 110",
                                   reply_markup=nav.orderMenu)
        elif msg.text == "üëÅ‚Äçüó® –ü—Ä–æ—Å–º–æ—Ç—Ä—ã":
            task.choose_task(2)
            await bot.send_message(msg.from_user.id,
                                   "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n–¶–µ–Ω–∞ 10 —Ä—É–±–ª–µ–π –∑–∞ 1000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤l\n–ü—Ä–∏–º–µ—Ä:\nhttps://vk.com/wall-22822305_1307837 3200",
                                   reply_markup=nav.orderMenu)
        elif msg.text[0:5] == "https":
            order_list = msg.text.split()
            if len(order_list) == 2 and int(order_list[1]) > 0:
                uid = str(msg.from_user.id)
                if task.check_task() == 1:
                    try:
                        sum = math.ceil(int(order_list[1]) / 1000 * 60)
                        if (await db_funcs.get_balance(engine, str(msg.from_user.id)) - sum) > 0:
                            like_api.make_like(str(uid), order_list[0], str(order_list[1]))
                            await bot.send_message(msg.from_user.id, "–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ")
                            await db_funcs.new_order(engine, {"tg_id": uid, "type_id": task.check_task(), "url": order_list[0],
                                                      "value": order_list[1]})
                            await db_funcs.add_balance(engine, uid, -sum)
                        else:
                            await bot.send_message(msg.from_user.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")

                    except Exception as ex:
                        await bot.send_message(msg.from_user.id, "–û—à–∏–±–∫–∞:" + str(ex))
                if task.check_task() == 2:
                    try:
                        sum = math.ceil(int(order_list[1]) / 1000 * 10)
                        if (await db_funcs.get_balance(engine, str(msg.from_user.id)) - sum) > 0:
                            view_api.make_view(order_list[0], str(order_list[1]))
                            await bot.send_message(msg.from_user.id, "–ó–∞–¥–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ")
                            await db_funcs.new_order(engine, {"tg_id": uid, "type_id": task.check_task(), "url": order_list[0],
                                                          "value": order_list[1]})
                            await db_funcs.add_balance(engine, uid, -sum)
                        else:
                            await bot.send_message(msg.from_user.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
                    except Exception as ex:
                        await bot.send_message(msg.from_user.id, "–û—à–∏–±–∫–∞:" + str(ex))
                if task.check_task() == 0:
                    await bot.send_message(msg.from_user.id, "–ù–µ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø –Ω–∞–∫—Ä—É—Ç–∫–∏.")
            else:
                await bot.send_message(msg.from_user.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞.\n–ü—Ä–∏–º–µ—Ä –≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:\nhttps://vk.com/wall-22822305_1307837 3200\n(—Å—Å—ã–ª–∫–∞_–Ω–∞_–ø–æ—Å—Ç, 1 –ø—Ä–æ–±–µ–ª, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)")

            # await bot.send_message(msg.from_user.id, "–¢–∏–ø –∑–∞–¥–∞–Ω–∏—è: " + str(task.check_task()))
        else:
            await bot.send_message(msg.from_user.id, "–ß—Ç–æ–±—ã –ø–æ—è–≤–∏–ª–æ—Å—å –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start")


if __name__ == '__main__':
    executor.start_polling(dp)
